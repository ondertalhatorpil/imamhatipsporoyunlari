services:
  backend:
    container_name: oncu_backend
    build:
      context: ./server
      dockerfile: Dockerfile
      # ports:
      #   - "8082:8082"
    depends_on:
       db:
         condition: service_healthy
    environment:
      - NODE_ENV=production
      - DB_HOST=mysqldb
      - DB_USER=root
      - DB_PASSWORD=1453Abdullah*
      - DB_NAME=oncu
      - PORT=8082
      - CORS_ORIGIN=https://imamhatipsporoyunlari.com
      - UPLOAD_DIR=uploads
    volumes:
      - backend:/app
    networks:
      - oncu-wlan
    restart: unless-stopped

  frontend:
    container_name: oncu_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      # ports:
      #   - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=https://imamhatipsporoyunlari.com
    depends_on:
      - backend
    ports:
      - 8140:80
    networks:
      - oncu-wlan
    restart: unless-stopped

  db:
    container_name: mysqldb
    image: mariadb
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1453Abdullah*
      MYSQL_DATABASE: oncu
    healthcheck:
        test: [ "CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized" ]
        start_period: 30s
        interval: 20s
        timeout: 5m
        retries: 100
      # ports:
      #   - "3306:3306"
    networks:
      - oncu-wlan
    volumes:
      - db:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  #  phpmyadmin:
  #    container_name: oncu_phpmyadmin
  #    image: phpmyadmin/phpmyadmin
  #    ports:
  #      - "8053:80"
  #    environment:
  #      PMA_HOST: mysql
  #      PMA_USER: root
  #      PMA_PASSWORD: 1453Abdullah*
  #    depends_on:
  #      - db
  #  networks:
  #    - oncu-wlan
  #  restart: unless-stopped

  #nginx:
  #  container_name: oncu_nginx
  #  image: nginx:latest
  #  ports:
  #    - "8140:80"
  #  volumes:
  #    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #  depends_on:
  #    - frontend
  #    - backend
  #  networks:
  #    - oncu-wlan
networks:
  oncu-wlan:
    name: oncu-wlan
    driver: bridge
volumes:
  backend:
  frontend:
  db:
